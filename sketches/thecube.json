{
  "version": "1.3.5",
  "revision": 40,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "iw205_022",
      "mod": 1615559680059,
      "parent": "cc_iw205_20210312",
      "code": "let credits = { \n    \"student_names\": \"Orest Saldan, Jakub Przybylski\", \n    \"tool_name\": \"Just A Cube\", \n    \"tool_info\": \"A floating cube that has multi-customizable tools\" \n} \n\nlet buttonExport;\nlet myFont;\nfunction preload() {\nmyFont = loadFont('https://cdn.glitch.com/40b4a75e-b8e1-46cb-b903-611e843bfa8f%2FRoboto-Thin.ttf?v=1615460407802');\n}\nlet mySelect\nlet layer\nlet offset = 200\nlet offsetY = 50;\nlet guiGap = 50;\n\nfunction setup() {\n\t\n    createCanvas(windowWidth, windowHeight, WEBGL);\n    \n    textAlign(CENTER); \n\t background(0); \n\tmySelect = createSelect(); // create dropdown \n\t mySelect.position(width - 250, 50); // set position \n\t mySelect.option('x'); // add option \n\t mySelect.option('y'); // add option \n\t mySelect.option('z'); // add option \n\t mySelect.selected('x'); // set default \n \n  rectMode(CENTER); \n  stroke(255); \n  noFill(); \n  \n  \n\t// weird hack to hide box around type in 3d\n\tgl = this._renderer.GL;\n\tgl.disable(gl.DEPTH_TEST);\n    \n//Sliders\n\t\n\tsliderBg = createSlider(0, 255, 255, 1); // min, max, default, stepSize \n\tsliderBg.position(width -offset, offsetY); // set position \n\tlet bgLabel = createP(\"Background Color\") //slider label\n\tbgLabel.position(width -offset, offsetY + guiGap*-0.7);\n\tbgLabel.style('color', '#ff0000');\n\n\tsliderStrokeColor = createSlider(0, 255, 0, 1);\n\tsliderStrokeColor.position(width - offset, offsetY + guiGap*1); \n\tbgLabel = createP(\"Stroke Color\")\n\tbgLabel.position(width -offset, offsetY + guiGap*0.3);\n\tbgLabel.style('color', '#ff0000');\n\t\n\tsliderSize = createSlider(10, 500, 150, 1); \n\tsliderSize.position(width-offset, offsetY + guiGap*2); \n\tbgLabel = createP(\"Size\")\n\tbgLabel.position(width -offset, offsetY + guiGap*1.3);\n\tbgLabel.style('color', '#ff0000');\n\t\n\tsliderAmount = createSlider(1, 50, 5, 1); \n\tsliderAmount.position(width -offset, offsetY + guiGap*3);\n\tbgLabel = createP(\"Amount\")\n\tbgLabel.position(width -offset, offsetY + guiGap*2.3);\n\tbgLabel.style('color', '#ff0000');\n\t\n\tsliderSpinX = createSlider(0.01, 10, .2, .05); \n\tsliderSpinX.position(width-offset, offsetY + guiGap*4); \n\tbgLabel = createP(\"Spin Y\")\n\tbgLabel.position(width -offset, offsetY + guiGap*3.3);\n\tbgLabel.style('color', '#ff0000');\n\t\n\tsliderSpinY = createSlider(.01, 10, .2, .05); \n\tsliderSpinY.position(width-offset, offsetY + guiGap*5);\n\tbgLabel = createP(\"Spin X\")\n\tbgLabel.position(width -offset, offsetY + guiGap*4.3);\n\tbgLabel.style('color', '#ff0000');\n\t\n\tsliderShake = createSlider(0, 100, 0, 0.5); \n\tsliderShake.position(width-offset, offsetY + guiGap*6);\n\tbgLabel = createP(\"Shake\")\n\tbgLabel.position(width -offset, offsetY + guiGap*5.3);\n\tbgLabel.style('color', '#ff0000');\n\t\n\t//export button\n\tbuttonExport = createButton(\"EXPORT\");\n\tbuttonExport.position(width -offset*0.7, offsetY + guiGap*6.9);\n\tbuttonExport.size(70, 40);\n\tbuttonExport.style('color: white');\n\tbuttonExport.style('background: blue');\n\tbuttonExport.mousePressed(exportImage)\n}\n\nfunction draw(){\n\tbackground(sliderBg.value());\n    \n\n    \n\t//TEXT\n\tfor (let i = 0; i < sliderAmount.value(); i++){\n\tpush()\n    textFont(myFont) \n\ttextAlign(CENTER, CENTER)\n\ttextSize(sliderSize.value()*.4)\n\tfill(255, 0, 0)\n\ttranslate (random(sliderShake.value()), random(sliderShake.value()))\n\t// translate(0, i*50, i*50)\n\ttranslate(i*1, i*2, i)\n\trotateY(radians(frameCount * sliderSpinY.value()));\n\trotateX(radians(frameCount * sliderSpinX.value()));\n\t// text(\"CUBE\", width -offset*7.68, offsetY*-0.1);\n\ttext(\"CUBE\", 0, 0);\n\n\n\tpop()\n\t}\n\n//Box\n\tfor (let i = 0; i < sliderAmount.value(); i++){ //use i!!!\n    \tpush(); \n    \t\ttranslate (random(sliderShake.value()), random(sliderShake.value())) //shake\n    \t\t// translate(width*i, heigh2*i) \n    \t\ttranslate(0, 0, i*50);\n    \t\tnoFill();\n\t\t\tstroke(sliderStrokeColor.value());\n\t\t\tstrokeWeight(1)\n    \t\trotateY(radians(frameCount * sliderSpinY.value()));\n\t\t\trotateX(radians(frameCount * sliderSpinX.value()));\n\t\t\tbox(sliderSize.value()); \n\t\tpop();\n\t}\n}\n\nfunction exportImage() {\n\tsave(\"myToolName.png\")\n}"
    }
  ]
}