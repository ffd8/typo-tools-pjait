{
  "version": "1.3.5",
  "revision": 40,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "UNIVERSE FINAL.3",
      "mod": 1615559496639,
      "code": "let credits = {\n\t\"student_names\": \"Madina Mahomedova, Sefa Sagir\",\n\t\"tool_name\": \"Universe\",\n\t\"tool_info\": \"Tweak the universe!\"\n}\n\nlet font, points;\nlet aSlider;\nlet sizeSlider;\nlet colorPicker;\nlet sel;\nlet soundSlider;\n// let selCursor;\n\nlet backgroundSlider;\nlet txt = \"universe\"// // \n// let TreshholdSlider;\n\nlet sfx;\n\nfunction preload() {\n\tfont = loadFont(\"assets/HANSON-BOLD.TTF\");\n    sfx = loadSound(\"assets/Horizon synth1.mp3\");\n}\n\nfunction setup() {\n\n\tcreateCanvas(windowWidth, windowHeight);\n\n\tbuttonExport = createButton('EXPORT')\n\tbuttonExport.position(width / 2 + 650, 20)\n\tbuttonExport.mousePressed(exportImage)\n\n\taSlider = createSlider(-100, 100, 0, 0.01);\n\taSlider.position(width / 2+600, 50);\n\n\tsizeSlider = createSlider(10, 500, 100, .1);\n\tsizeSlider.position(width / 2+600, 75);\n\tsizeSlider.input(function() {\n\t\tgenType('UNIVERSE', sizeSlider.value());\n\t});\n\n\tsoundSlider = createSlider (0,1,.5,.01)\n\tsoundSlider.position (width / 2+600, 125);\n\n\tbackgroundSlider = createSlider (0,100,20,10)\n\tbackgroundSlider.position(width / 2+600, 100);\n\n\tcolorPicker = createColorPicker(\"yellow\")\n\tcolorPicker.position(width / 2 + 530, 60)\n\n\t\n\tmySelect = createSelect(); // create dropdown \n\tmySelect.position(width / 2 + 450, 65); // set position \n\tmySelect.option('ellipses'); // add option \n\tmySelect.option('rects'); // add option \n\tmySelect.option('lines');\n\tmySelect.option('curve');\n\tmySelect.option('star');// add option \n\tmySelect.selected('curve'); // set default \n\t\n\n\tselCursor = createSelect(); // create dropdown \n\tselCursor.position(width / 2 + 400,65); // set position \n\tselCursor.option('ðŸ‘½', 1);\n\tselCursor.option('ðŸ‘¾', 2);\n\tselCursor.option('ðŸ›¸', 3);\n\tselCursor.option('ðŸš€', 4);\n\tselCursor.option('ðŸŒŽ', 5);\n\tselCursor.selected(3); // set default \n\t\n\trectMode(CENTER); \n\tstroke(255); \n\tnoFill(); \n\t\n\t//TreshholdSlider = createTreshholdSlider (.01,.09,.05,.005)\n\t//TreshholdSlider.position(width/2 , 125)\n\n\tgenType('UNIVERSE', 100, width);\n\t\n\tsetupAudio();\n\t// sfx.volume(.9)\n\n}\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tupdateAudio();\n\tmasterVolume(soundSlider.value()) // 0 Â» 1\n\n\t// print(mouseY);\n\tbackground(35, 0, 95, backgroundSlider.value());\n\t\n\t// push()\n\t\tfill(255)\n\t\ttextSize(40)\n\t\n\n\tif(selCursor.value() == 1) {\n\t\ttext('ðŸ‘½', mouseX, mouseY)\n\t} else if(selCursor.value() == 2) {\n\t\ttext('ðŸ‘¾', mouseX, mouseY)\n\t} else if(selCursor.value() == 3) {\n\t\ttext('ðŸ›¸', mouseX, mouseY)\n\t} else if(selCursor.value() == 4) {\n\t\ttext('ðŸš€', mouseX, mouseY)\n\t} else if(selCursor.value() == 5) {\n\t\ttext('ðŸŒŽ', mouseX, mouseY)\n\t}\n\t// pop()\n\t\n\n\n\tpush();\n\t//fill(255,0,0)\n\tstroke(random(255), random(255), random(255))\n\ttranslate(random(width), random(height));\n\t//rotate (frameCount / -100.0)\n\tstar(0, 0, amp*1, 2, 4);\n\tpop();\n\n\n\ttranslate(width / 2, height / 2);\n\n\tnoFill();\n\tstroke(colorPicker.color())\n\tstrokeWeight(3);\n\n\tbeginShape();\n\tfor(let i = 0; i < points.length; i++) {\n\t\tlet p = points[i];\n\t\tif(mySelect.value() == 'ellipses'){ \n\t\t    ellipse(p.x, p.y, 10); \n\t\t  }else if(mySelect.value() == 'rects'){ \n\t\t    rect ( p.x, p.y, 10 );\n\t\t  }else if(mySelect.value() == 'lines'){ \n\t\t    line(p.x, p.y, p.x+10, p.y+25)\n\t\t  } \n\t\t  else if(mySelect.value() == 'curve'){ \n\t\t    curveVertex(p.x + random(frameCount % 3), p.y + random(aSlider.value()));\n\t\t  } \n\t\t  \n\t\t  else if(mySelect.value() == 'star'){ \n\t\t    star(p.x, p.y, 14, 2, 8);\n\t\t  }\n\t\t  \n\t\t// curveVertex(p.x + random(frameCount % 3), p.y + random(aSlider.value()));\n\t\t //star(p.x, p.y, 14, 2, 8);\n\t\t// line(p.x, p.y, p.x, p.y+25)\n\t}\n\tendShape();\n\n\n\n}\n\nfunction star(x, y, radius1, radius2, npoints) {\n\tlet angle = TWO_PI / npoints;\n\tlet halfAngle = angle / 2.0;\n\tbeginShape();\n\tfor(let a = 0; a < TWO_PI; a += angle) {\n\t\tlet sx = x + cos(a) * radius2;\n\t\tlet sy = y + sin(a) * radius2;\n\t\tvertex(sx, sy);\n\t\tsx = x + cos(a + halfAngle) * radius1;\n\t\tsy = y + sin(a + halfAngle) * radius1;\n\t\tvertex(sx, sy);\n\n\t}\n\n\tendShape(CLOSE);\n\n\n}\n\nfunction genType(txtString, txtSize) {\n\tlet bounds = font.textBounds(txtString, 0, 0, txtSize);\n\n\n\tpoints = font.textToPoints(txtString, -bounds.w / 2, bounds.h / 2, txtSize, {\n\t\tsampleFactor: .3, // (default=.1), higher = more points \n\t\tsimplifyThreshold: .01 // if not 0, collinear points are removed from the polygon \n\t});\n}\n\nfunction exportImage() {\n\n\tsave('universe.png')\n\n}\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft = [],\n\twaveform = [],\n\tamp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tuserStartAudio();\n\tmic = new p5.AudioIn();\n\t//mic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(sfx);\n\tsfx.play();\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\t// test changing mic to sfx\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}\nlet selCursor;"
    }
  ]
}